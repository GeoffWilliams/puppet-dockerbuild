<!DOCTYPE html>
<html>
    <head>
        <title>Dockerbuild - New Image</title>
        <link rel="stylesheet" type="text/css" href="style.css"> 
        <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.12.0/jquery.min.js"></script>
        <script src="http://cdn.jsdelivr.net/jquery.validation/1.15.0/jquery.validate.min.js"></script>
        <script src="new_image.js"></script>
            /*
        var role_classes;
            
        function updateRoleClasses(environment) {
            $('#role_class').empty().append(new Option());
            for (c in role_classes[environment]) {
                $('#role_class').append(
                    new Option(
                        role_classes[environment][c],
                        role_classes[environment][c]
                    )
                );
            }
        }
            
        $(document).ready(function() {
    $.ajax({
        url: "/role_classes"
    }).then(function(data) {
        role_classes = jQuery.parseJSON(data)
        $('#environment').empty()
        for (environment in role_classes) {
           $('#environment').append(new Option(environment, environment));
        }
        $('#environment').on('change', function (e) {
            var optionSelected = $("option:selected", this);
            var valueSelected = this.value;
            updateRoleClasses(valueSelected);
        });
        
        // if we have a production environment, select it and populate the 
        // relevant list of clases
        if ("production" in role_classes) {
            $('#environment').val("production");
            updateRoleClasses("production");
        }

    });
});
        */
        </script>
    
    </head>
    <body>
        <h1>Dockerbuild - New Image</h1>
        <i>Where were going there are no command lines :D</i>
        <form action="/new_image" method="POST">
            <table>
                <tr>
                    <td>Base Image</td>
                    <td><input type="text" id="base_image" value="centos"/></td>
                    <td>Docker base image to start building our new image from</td>
                </tr>
                <tr>
                    <td>Base Image Tag</td>
                    <td><input type="text" id="base_image_tag" value="latest"/></td>
                    <td>Tagged version of Base Image to use</td>
                </tr>
                <tr>
                    <td>Environment</td>
                    <td>
                        <select id="environment" />
                    </td>
                    <td>Puppet environment to use.  Normally 'production'</td>
                </tr>
                <tr>
                    <td>Role Class</td>
                    <td><select id="role_class" /></td>
                    <td>Puppet role class to apply inside the image we are building</td>
                </tr>
                <tr>
                    <td>Container Hostname</td>
                    <td><input type="text" id="container_hostname" value="localhost"/></td>
                    <td>Hostname to use during building</td>
                </tr>
                <tr>
                    <td>Output Image</td>
                    <td><input type="text" id="output_image" /></td>
                    <td>Name of the image to create</td>
                </tr>
                <tr>
                    <td>Output Tag</td>
                    <td><input type="text" id="output_tag" value="0"/></td>
                    <td>Tag to apply to the image that gets created</td>
                </tr>
                <tr>
                    <td>Target OS</td>
                    <td><input type="text" id="target_os" value="redhat" /></td>
                    <td>We will attempt to guess what OS the image is by looking at its image name.  If we get it wrong you can override it here.  Valid choices map to the $osfamily puppet fact: 'redhat' or 'debian'</td>
                </tr>
                <tr>
                    <td>Debug</td>
                    <td><input type="checkbox" id="debug" value="debug"/></td>
                    <td>Enable debug output during build?</td>
                </tr>
            </table>
            <input type="submit" id="submit" value="submit"/>
        </form>
    </body>
</html>
